<?php

namespace Bigprimes\Pages;

class Cruncher extends \Bigprimes\Pages
{
    private $max_len_prime               = 11;
    private $max_len_cube                = 17;
    private $max_len_square              = 19;
    private $max_len_triangle            = 17;
    private $max_len_convertion          = 500; //converting the number to binary and hex ...
    private $max_len_factorization       = 9;
    private $max_len_roman_numerals      = 6;
    private $max_len_egypt_numerals      = 7;
    private $max_len_chinese_numerals    = 6;
    private $max_len_babylonian_numerals = 13;
    // fermat numbers array
    private $array_fermat                = ['3', '5', '17', '257', '65537', '4294967297',
        '18446744073709551617', '340282366920938463463374607431768211457',
        '115792089237316195423570985008687907853269984665640564039457584007913129639937',
        '13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084097'];
    //mersenne primes array
    private $array_mersenne              = [
        '3'
        , '7'
        , '31'
        , '127'
        , '8191'
        , '131071'
        , '524287'
        , '2147483647'
        , '2305843009213693951'
        , '618970019642690137449562111'
        , '162259276829213363391578010288127'
        , '170141183460469231731687303715884105727'
        , '6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151'
        , '531137992816767098689588206552468627329593117727031923199444138200403559860852242739162502265229285668889329486246501015346579337652707239409519978766587351943831270835393219031728127'
        , '10407932194664399081925240327364085538615262247266704805319112350403608059673360298012239441732324184842421613954281007791383566248323464908139906605677320762924129509389220345773183349661583550472959420547689811211693677147548478866962501384438260291732348885311160828538416585028255604666224831890918801847068222203140521026698435488732958028878050869736186900714720710555703168729087'
        , '1475979915214180235084898622737381736312066145333169775147771216478570297878078949377407337049389289382748507531496480477281264838760259191814463365330269540496961201113430156902396093989090226259326935025281409614983499388222831448598601834318536230923772641390209490231836446899608210795482963763094236630945410832793769905399982457186322944729636418890623372171723742105636440368218459649632948538696905872650486914434637457507280441823676813517852099348660847172579408422316678097670224011990280170474894487426924742108823536808485072502240519452587542875349976558572670229633962575212637477897785501552646522609988869914013540483809865681250419497686697771007'
        , '446087557183758429571151706402101809886208632412859901111991219963404685792820473369112545269003989026153245931124316702395758705693679364790903497461147071065254193353938124978226307947312410798874869040070279328428810311754844108094878252494866760969586998128982645877596028979171536962503068429617331702184750324583009171832104916050157628886606372145501702225925125224076829605427173573964812995250569412480720738476855293681666712844831190877620606786663862190240118570736831901886479225810414714078935386562497968178729127629594924411960961386713946279899275006954917139758796061223803393537381034666494402951052059047968693255388647930440925104186817009640171764133172418132836351'
        , '259117086013202627776246767922441530941818887553125427303974923161874019266586362086201209516800483406550695241733194177441689509238807017410377709597512042313066624082916353517952311186154862265604547691127595848775610568757931191017711408826252153849035830401185072116424747461823031471398340229288074545677907941037288235820705892351068433882986888616658650280927692080339605869308790500409503709875902119018371991620994002568935113136548829739112656797303241986517250116412703509705427773477972349821676443446668383119322540099648994051790241624056519054483690809616061625743042361721863339415852426431208737266591962061753535748892894599629195183082621860853400937932839420261866586142503251450773096274235376822938649407127700846077124211823080804139298087057504713825264571448379371125032081826126566649084251699453951887789613650248405739378594599444335231188280123660406262468609212150349937584782292237144339628858485938215738821232393687046160677362909315071'
        , '190797007524439073807468042969529173669356994749940177394741882673528979787005053706368049835514900244303495954950709725762186311224148828811920216904542206960744666169364221195289538436845390250168663932838805192055137154390912666527533007309292687539092257043362517857366624699975402375462954490293259233303137330643531556539739921926201438606439020075174723029056838272505051571967594608350063404495977660656269020823960825567012344189908927956646011998057988548630107637380993519826582389781888135705408653045219655801758081251164080554609057468028203308718724654081055323215860189611391296030471108443146745671967766308925858547271507311563765171008318248647110097614890313562856541784154881743146033909602737947385055355960331855614540900081456378659068370317267696980001187750995491090350108417050917991562167972281070161305972518044872048331306383715094854938415738549894606070722584737978176686422134354526989443028353644037187375385397838259511833166416134323695660367676897722287918773420968982326089026150031515424165462111337527431154890666327374921446276833564519776797633875503548665093914556482031482248883127023777039667707976559857333357013727342079099064400455741830654320379350833236245819348824064783585692924881021978332974949906122664421376034687815350484991'
        , '285542542228279613901563566102164008326164238644702889199247456602284400390600653875954571505539843239754513915896150297878399377056071435169747221107988791198200988477531339214282772016059009904586686254989084815735422480409022344297588352526004383890632616124076317387416881148592486188361873904175783145696016919574390765598280188599035578448591077683677175520434074287726578006266759615970759521327828555662781678385691581844436444812511562428136742490459363212810180276096088111401003377570363545725120924073646921576797146199387619296560302680261790118132925012323046444438622308877924609373773012481681672424493674474488537770155783006880852648161513067144814790288366664062257274665275787127374649231096375001170901890786263324619578795731425693805073056119677580338084333381987500902968831935913095269821311141322393356490178488728982288156282600813831296143663845945431144043753821542871277745606447858564159213328443580206422714694913091762716447041689678070096773590429808909616750452927258000843500344831628297089902728649981994387647234574276263729694848304750917174186181130688518792748622612293341368928056634384466646326572476167275660839105650528975713899320211121495795311427946254553305387067821067601768750977866100460014602138408448021225053689054793742003095722096732954750721718115531871310231057902608580607'
        , '4782202788054612029528392986600059097414971724022365008513345109918378950942662970278927686112707894586824720981524256319306585052676834087480834429433264797425893247623688331021633208954847354805799943341309825989013743806187109581043148680813778321530496715601563282624414040398143207622036272190408590790537203475256105564071579263867875240985573356522656108542128577321057879052328865035355873615679363655889925711574420153832091752422843046918811427400662135559303516853703976812686385750376227787949580582081831261725701003498206512329872677233489510953469375683037038373999696771585788905639115522613405495707184524158219208223766442059014593330657009722153962376853423770486138578089775621301167811299166407361746606697808186757966914671246073712904200588408923186387737887675292886953797066980967406053530122853539036965490224784924649007954898678503314655546475504501686187354866964374552614120640782949622452027788962138602665933147687696322089504278791624651519312327831756553779377194524673395819281486668576384019590720179413349582970319393884388810494546040342087536563628332152073181614300721769371426238517540520845214665313301183551962591849558938499025348780376716477073930634436840084468255937443451690315999349137664638968972614199015304906547819056227171224947070739716300953775743441307920501863532234466545645695774331885044978250148663467372130392099894852145190998232878772486650513010816769902892518719250066947215706536216248696240569256865554296221552211560427778662545936998801070186162601476474293459830183651273363462732675883060701410359254829149774339297173680765610959599911309189788238350131635672661435969218239977196933874395403996623675580528211207136396370858056051160781770985452576988032333812939272752101944629527490313835551985197095928885236415301789218675141014541203096191270934369039522098280317668942061325572349643638403056487349290884223786292887472231219032385281034091824306618947740727265524284893304474861454942076799041739447165838281671410435831206790501914527326287370339974707206016882562827404270170322606727980343479326425730091839813077719322455394763960606588214326603156141490740557698055166263044447583756711516490181193442236859424151843795389335765432129944054855345155859273424561825146813714720606287781021240923708021492298349635179527270302962970156927686511635050080407282674252362644695710769768866137302789313609674382719017385508484663373476120843567983065059558072935110637544240807350667082987233779768874938983584523095638996120616318634391967112086464384649470963230072729200912586147267999762496709852769503535733924416202657720741248683592202828983311140833923302433917797976990311425843619350936754483811194408812763388084204451804912454383884180800945275626668057628954763384641305107753773247082495804533355717481965025070819730466422826105697510564289798951182192885976352229053898948737614642139910911535864505818992696826225754111'
        , '34608828249085121524296039576741331672262866890023854779048928344500622080983411446436437554415370753366448674763505018641470709332373970608376690404229265789647993709760358469552319045484910050304149809818540283507159683562232941968059762281334544739720849260904855192770626054911793590389060795981163838721432994278763633095377438194844866471124967685798888172212033000821469684464956146997194126921284336206463313859537577200462442029064681326087558257488470489384243989270236884978643063093004422939603370010546595386302009073043944482202559097406700597330570799507832963130938739885080198416258635194522913042562936679859587495721031173747796418895060701941717506001937152430032363631934265798516236047451209089864707430780362298307038193445486493756647991804258775574973833903315735082891029392359352758617185019942554834671861074548772439880729606244911940066680112823824095816458261761861746604034802056466823143718255492784779380991749580255263323326536457743894150848953969902818530057870876229329803338285735419228259022169602665532210834789602051686546011466737981306056247480055071718250333737502267307344178512950738594330684340802698228963986562732597175372087295649072830289749771358330867951508710859216743218522918811670637448496498549094430541277444079407989539857469452772132166580885754360477408842913327292948696897496141614919739845432835894324473601387609643750514699215032683744527071718684091832170948369396280061184593746143589068811190253101873595319156107319196071150598488070027088705842749605203063194191166922106176157609367241948160625989032127984748081075324382632093913796444665700601391278360323002267434295194325607280661260119378719405151497555187549252134264394645963853964913309697776533329401822158003182889278072368602128982710306618115118964131893657845400296860012420391376964670183983594954112484565597312460737798777092071706710824503707457220155015899591766244957768006802482976673920392995410164224776445671222149803657927708412925555542817045572430846389988129960519227313987291200902060882060733762075892299473666405897427035811786879875694315078654420055603469625309399653955932310466430039146465805452965014040019423897552675534768248624631951431493188170905972588780111850281190559073677771187432814088678674286302108275149258477101296451833651979717375170900505673645964696355331369819296000267389583289299126738345726980325998955997501176664201042888546085699446442834195232948787488410595750197438786353119204210855804692460582533832967771946911459901921324984968810021189968284941331573164056304725480868921823442538199590383852412786840833479611419970101792978355653650755329138298654246225346827207503606740745956958127383748717825918527473164970582095181312905519242710280573023145554793628499010509296055849712377978984921839997037415897674154830708629145484724536724572622450131479992681684310464449439022250504859250834761894788889552527898400988196200014868575640233136509145628127191354858275083907891469979019426224883789463551'
    ];
    // perfect numbers array
    private $array_perfect               = ['6'
        , '28'
        , '496'
        , '8128'
        , '33550336'
        , '8589869056'
        , '137438691328'
        , '2305843008139952128'
        , '2658455991569831744654692615953842176'
        , 191561942608236107294793378084303638130997321548169216
        , '13164036458569648337239753460458722910223472318386943117783728128'
        , '14474011154664524427946373126085988481573677491474835889066354349131199152128'
        , '23562723457267347065789548996709904988477547858392600710143027597506337283178622239730365539602600561360255566462503270175052892578043215543382498428777152427010394496918664028644534128033831439790236838624033171435922356643219703101720713163527487298747400647801939587165936401087419375649057918549492160555646976'
        , '141053783706712069063207958086063189881486743514715667838838675999954867742652380114104193329037690251561950568709829327164087724366370087116731268159313652487450652439805877296207297446723295166658228846926807786652870188920867879451478364569313922060370695064736073572378695176473055266826253284886383715072974324463835300053138429460296575143368065570759537328128'
        , '54162526284365847412654465374391316140856490539031695784603920818387206994158534859198999921056719921919057390080263646159280013827605439746262788903057303445505827028395139475207769044924431494861729435113126280837904930462740681717960465867348720992572190569465545299629919823431031092624244463547789635441481391719816441605586788092147886677321398756661624714551726964302217554281784254817319611951659855553573937788923405146222324506715979193757372820860878214322052227584537552897476256179395176624426314480313446935085203657584798247536021172880403783048602873621259313789994900336673941503747224966984028240806042108690077670395259231894666273615212775603535764707952250173858305171028603021234896647851363949928904973292145107505979911456221519899345764984291328'
        , '1089258355057829337698225273522048981957108454302608067318906618508470155298616996291940961858901379546182685531220055762780759342407499066046704182083087124626926378164410931450968826355205573671671624202686633360807123109470452668371537599662797484934359039779954213666598820299501366380164619080260403235229556730554163992303009752651350320619930563673695280153023049498468696618144072021372831425963701460505606378119245841386552600145384072983309717141950085498085709671387054868320477972299055273914798446936214147860706887052107312380067072602317009422809314774791894700769891009818743169303028154303290071199392984292940283852217800166629229157110264080599294016452483028528153331119523441423159614934140265550242360007858215936798489500727196347516386044241721984706558329364277995903102292034620628080752342422906401283027034649671445569324281946859622177566643375489715678451311792675935981010355562887971948569016060035334607879359770371846507659970601616998311983878150420763306289490886429900481786499537645379839365212725494441511932772182768149943659849007457246983861558265144823191367758350341527780770221556945275566504831636564856831502556078058133043400055653540413313266034639355202834006126905491569560542489551023207382276137352665717018261519604817417112576526410535323991500058749996247580834453782528'
        , '99497054337086473442435202604522816989643863571126408511774020575773849326355529178686629498151336416502516645641699516813140394897940636561646545947753232301453603583223268085613647233768081645727669037394385696522820301535888041815559513408036145123870584325525813950487109647770743827362571822870567643040184723115825645590386313377067112638149253171843914780065137373446222406322953569124771480101363180966448099882292453452395428270875732536311539266115116490704940164192417744919250000894727407937229829300578253427884494358459949535231819781361449649779252948099909821642207485514805768288115583409148969875790523961878753124972681179944234641016960011815788847436610192704551637034472552319820336532014561412028820492176940418377074274389149924303484945446105121267538061583299291707972378807395016030765440655601759109370564522647989156121804273012266011783451102230081380401951383582987149578229940818181514046314819313206321375973336785023565443101305633127610230549588655605951332351485641757542611227108073263889434409595976835137412187025349639504404061654653755349162680629290551644153382760681862294677414989047491922795707210920437811136712794483496437355980833463329592838140157803182055197821702739206310971006260383262542900044072533196137796552746439051760940430082375641150129817960183028081010978780902441733680977714813543438752546136375675139915776'
        , '33570832131986724437010877211080384841138028499879725454996241573482158450444042882048778809437690388449535774260849885573694759906173841157438424730130807047623655942236174850509108537827658590642325482494761473196579074656099918600764404702181660294469121778737965822199901663478093006075022359223201849985636144177185925402078185073015045097727084859464743635537781500284915880244886306461785982956072060013474955617851481680185988557136609224841817877083608951191123174885226416130683197710667392351007374503755403352531476227943590071651702697594241031955529898971218001214641774673134944471562560957179657881556419122102935450299751813340515170956167951095453649485576150660101689160658011770193274226308280507786835049549112576654510119670456745939890194205255175384484489909328967646988163155982471564998196261632751283127879509198074253193409580454562488664383465379885002735506153988851506645137759275553988219425439764732399824712438125054117523837438256744437055019441051006489972341609117978404563794992004873057518455748701444951238377139620494287982489529827233140637014837408856156199515457669607964052126908149265601786094447595560440059050091763547114092255371397425807867554352112542194784815494784276201170845949274674632985210421075531784918358926690395463649721452265405713484388043911634485432358638806645313826206591131266232422007835577345584225720310518698143376736219283021119287617896146885584860065048876315701088796219593640826311622273328035603309475642390804499460156797855361018246696101253922254567240908315385468240931846166962495983407607141601251889544407008815874744654769507268678051757746956891212485456261121386667407711139619071530923355823178662705374393035049022603882479742334799407130280148769298597743778193050348749740786928096033906295910199238181338557856978191860647256209708168229116156300978059197026855726877649767072684960463452763160384093838292277544911857859658328888332628525056'
        , '18201749040140430273835167914751015293362889506937596103357359437740048438463485836303232258902400875568993809975036246337556768238366233707757573415903278080066115951092522543145952013119010340408099881835975590975835499003463227280543140756802691525621894771543951403656868707748606069885095036335283528581813088651653833089052785834280723280067200484903706704970113521040604064538274154252165373175595605248628998615687866235395077520314640188634353318831397392517095413127961059169783805545093120277974213161792712750189234973622853507624924636687588461310469170436099238232492598937308477793932361698480685664770932715430491007662682405163044765107996164343261202355969912750334459238591875176292279879181327972920090211444842306766331109269166235125509668704478958734853068636529397153443016761158813447481567868262367893981171020212189792514086148090215189947704212407282687964267041783873543080261582448824858431838554183153705837057341487700727731550997896239330477471263230726484877117521254868468174015562068490713644719481693089433418532636835808942200716440819313366362403191355576523173825131875335647759016207232990842875902548737480801898289658229210850221695663421649611729577245208490877897945867171915873804061345544603919338281884397538634259920738193259330950837923823615411304543599290641330796754637229721314074245135865275394292301532835414540035740253567232435673868968242806554916467387945199026147468808031055150281915733287931898181708779241724409277593094799901224641825850183281480975988801751016901958988814849430087926938683408662084176896164178170688871544229415824450055526787148715365214142372692896788902761679810950828268208180845309986581369910322372338718437892376924042425319226250711104694125177110946650435829229609212441927473293781744486775943173110295432226780186422343937384580708855852269417012387614583884866613236875101300845603785945237925447338784922452682337026775686191693583794243538309813874806083439394116832472101884074936138517168612519077402832074575032255369216417037979614393919019507244388546924316787128440250098924928769352393698587810869831127888084696751795845351130410199628821737636610886633120714458623846784948362409208330416268144841565505869827619451490634144640754203543507421045031995754480556197763855213987476437990952173006055503017305481394836591954388794314558786433824434673257753459825605748638411145315395326160048592155490496363095590187403880545069860151237473584639382355987779291886392614452838326884468500853448420623482240841078202705004101172745586672975106848437133377536'




    ];
    private $array_factorial             = [
        '1',
        '1',
        '2',
        '6',
        '24',
        '120',
        '720',
        '5040',
        '40320',
        '362880',
        '3628800',
        '39916800',
        '479001600',
        '6227020800',
        '87178291200',
        '1307674368000',
        '20922789888000',
        '355687428096000',
        '6402373705728000',
        '121645100408832000',
        '2432902008176640000',
        '51090942171709440000',
        '1124000727777607680000',
        '25852016738884976640000',
        '620448401733239439360000',
        '15511210043330985984000000',
        '403291461126605635584000000',
        '10888869450418352160768000000',
        '304888344611713860501504000000',
        '8841761993739701954543616000000',
        '265252859812191058636308480000000',
        '8222838654177922817725562880000000',
        '263130836933693530167218012160000000',
        '8683317618811886495518194401280000000',
        '295232799039604140847618609643520000000',
        '10333147966386144929666651337523200000000',
        '371993326789901217467999448150835200000000',
        '13763753091226345046315979581580902400000000',
        '523022617466601111760007224100074291200000000',
        '20397882081197443358640281739902897356800000000',
        '815915283247897734345611269596115894272000000000',
        '33452526613163807108170062053440751665152000000000',
        '1405006117752879898543142606244511569936384000000000',
        '60415263063373835637355132068513997507264512000000000',
        '2658271574788448768043625811014615890319638528000000000',
        '119622220865480194561963161495657715064383733760000000000',
        '5502622159812088949850305428800254892961651752960000000000',
        '258623241511168180642964355153611979969197632389120000000000',
        '12413915592536072670862289047373375038521486354677760000000000',
        '608281864034267560872252163321295376887552831379210240000000000',
        '30414093201713378043612608166064768844377641568960512000000000000',
        '1551118753287382280224243016469303211063259720016986112000000000000',
        '80658175170943878571660636856403766975289505440883277824000000000000',
        '4274883284060025564298013753389399649690343788366813724672000000000000',
        '230843697339241380472092742683027581083278564571807941132288000000000000',
        '12696403353658275925965100847566516959580321051449436762275840000000000000',
        '710998587804863451854045647463724949736497978881168458687447040000000000000',
        '40526919504877216755680601905432322134980384796226602145184481280000000000000',
        '2350561331282878571829474910515074683828862318181142924420699914240000000000000',
        '138683118545689835737939019720389406345902876772687432540821294940160000000000000',
        '8320987112741390144276341183223364380754172606361245952449277696409600000000000000',
        '507580213877224798800856812176625227226004528988036003099405939480985600000000000000',
        '31469973260387937525653122354950764088012280797258232192163168247821107200000000000000',
        '1982608315404440064116146708361898137544773690227268628106279599612729753600000000000000',
        '126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000',
        '8247650592082470666723170306785496252186258551345437492922123134388955774976000000000000000',
        '544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000',
        '36471110918188685288249859096605464427167635314049524593701628500267962436943872000000000000000',
        '2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000',
        '171122452428141311372468338881272839092270544893520369393648040923257279754140647424000000000000000',
        '11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000',
        '850478588567862317521167644239926010288584608120796235886430763388588680378079017697280000000000000000',
        '61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000',
        '4470115461512684340891257138125051110076800700282905015819080092370422104067183317016903680000000000000000',
        '330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000',
        '24809140811395398091946477116594033660926243886570122837795894512655842677572867409443815424000000000000000000',
        '1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000',
        '145183092028285869634070784086308284983740379224208358846781574688061991349156420080065207861248000000000000000000',
        '11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000',
        '894618213078297528685144171539831652069808216779571907213868063227837990693501860533361810841010176000000000000000000',
        '71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000',
        '5797126020747367985879734231578109105412357244731625958745865049716390179693892056256184534249745940480000000000000000000',
        '475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000',
        '39455239697206586511897471180120610571436503407643446275224357528369751562996629334879591940103770870906880000000000000000000',
        '3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000',
        '281710411438055027694947944226061159480056634330574206405101912752560026159795933451040286452340924018275123200000000000000000000',
        '24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000',
        '2107757298379527717213600518699389595229783738061356212322972511214654115727593174080683423236414793504734471782400000000000000000000',
        '185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000',
        '16507955160908461081216919262453619309839666236496541854913520707833171034378509739399912570787600662729080382999756800000000000000000000',
        '1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000',
        '135200152767840296255166568759495142147586866476906677791741734597153670771559994765685283954750449427751168336768008192000000000000000000000',
        '12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000',
        '1156772507081641574759205162306240436214753229576413535186142281213246807121467315215203289516844845303838996289387078090752000000000000000000000',
        '108736615665674308027365285256786601004186803580182872307497374434045199869417927630229109214583415458560865651202385340530688000000000000000000000',
        '10329978488239059262599702099394727095397746340117372869212250571234293987594703124871765375385424468563282236864226607350415360000000000000000000000',
        '991677934870949689209571401541893801158183648651267795444376054838492222809091499987689476037000748982075094738965754305639874560000000000000000000000',
        '96192759682482119853328425949563698712343813919172976158104477319333745612481875498805879175589072651261284189679678167647067832320000000000000000000000',
        '9426890448883247745626185743057242473809693764078951663494238777294707070023223798882976159207729119823605850588608460429412647567360000000000000000000000',
        '933262154439441526816992388562667004907159682643816214685929638952175999932299156089414639761565182862536979208272237582511852109168640000000000000000000000',
        '93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000',
        '9425947759838359420851623124482936749562312794702543768327889353416977599316221476503087861591808346911623490003549599583369706302603264000000000000000000000000',
        '961446671503512660926865558697259548455355905059659464369444714048531715130254590603314961882364451384985595980362059157503710042865532928000000000000000000000000',
        '99029007164861804075467152545817733490901658221144924830052805546998766658416222832141441073883538492653516385977292093222882134415149891584000000000000000000000000',
        '10299016745145627623848583864765044283053772454999072182325491776887871732475287174542709871683888003235965704141638377695179741979175588724736000000000000000000000000',
        '1081396758240290900504101305800329649720646107774902579144176636573226531909905153326984536526808240339776398934872029657993872907813436816097280000000000000000000000000',
        '114628056373470835453434738414834942870388487424139673389282723476762012382449946252660360871841673476016298287096435143747350528228224302506311680000000000000000000000000',
        '12265202031961379393517517010387338887131568154382945052653251412013535324922144249034658613287059061933743916719318560380966506520420000368175349760000000000000000000000000',
        '1324641819451828974499891837121832599810209360673358065686551152497461815091591578895743130235002378688844343005686404521144382704205360039762937774080000000000000000000000000',
        '144385958320249358220488210246279753379312820313396029159834075622223337844983482099636001195615259277084033387619818092804737714758384244334160217374720000000000000000000000000',
        '15882455415227429404253703127090772871724410234473563207581748318444567162948183030959960131517678520479243672638179990208521148623422266876757623911219200000000000000000000000000'
    ];

    private function prob_prime($num)
    {
        if ($num == 2 OR $num == 3) {
            return true;
        }

        $numToCheck = explode('-', chunk_split($num.'.00000000', 1, '-'));
        $divideBy   = 9; //currently only for dividing by 9!

        $setting['decimals only'] = true;

        $answer  = []; // to hold the answer
        $working = false; // for working out

        foreach ($numToCheck as $nthDigit => $digit) {
            if ($digit == '.') {
                $donePoint = true;
                $answer[]  = '.';
            } else {
                if ($working != false) {
                    $working = $digit + ($working * 10);
                    if ($working > $divideBy) {
                        $temp = ($working % $divideBy);
                        if ($donePoint == true) {
                            $answer[$nthDigit - 1] = ($working - $temp) / $divideBy;
                        }
                        if ($temp == 0) {
                            $working = false;
                        } else {
                            $working = $temp;
                        }
                    }
                } elseif ($digit > $divideBy) {
                    $temp = ($digit % $divideBy);
                    if ($donePoint == true) {
                        $answer[$nthDigit - 1] = $digit - $temp;
                    }
                } else {
                    $working = $digit;
                }
            }
        }

        $answer = implode('', $answer);
        $answer = trim($answer, '.');
        $answer = substr($answer, 0, 5);
        if ($answer == '11111' OR $answer == '22222' OR $answer == '44444' OR $answer
            == '55555' OR $answer == '77777' OR $answer == '88888') {
            return true;
        } else {
            return false;
        }
    }

    //convert a decimal/denery number to a base of your choosing (max = base 16)
    private function dec2base($n, $base)
    {
        $values = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C',
            'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',
            'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e',
            'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',
            't', 'u', 'v', 'w', 'x', 'y', 'z', '+', '/'];
        $val    = '';
        while (($n != '0') && ($n != 0)) {
            $val = $values[bcmod($n, $base)].$val;
            $n   = bcdiv($n, $base, 0);
        }
        return $val;
    }

    private function dec2bab($n)//decimal to babylonian numerals (base 60)
    {
        $values = [' &nbsp; &nbsp; &nbsp; '];
        for ($i = 1; $i < 60; $i++) {
            $values[] = '<img src="//static.bigprimes.net/imgs/babnumbers/bab_'.$i.'.gif" alt="'.$i.'">';
        }
        $val = '';
        while (($n != '0') && ($n != 0)) {
            $val = $values[bcmod($n, 60)]." &nbsp; ".$val;
            $n   = bcdiv($n, 60, 0);
        }
        return $val;
    }

    private function is_even($n)
    {
        switch (substr($n, -1)) {
            case '0':
            case '2':
            case '4':
            case '6':
            case '8':
                return true;
            default:
                return false;
        }
    }

    //check if a number is a triangle number or not. if not then return false.
    //if true return which triangle number it is
    private function is_triangle($num)
    {
        $n           = 2;
        $n_too_small = 1;
        $n_too_big   = $num;
        $j           = 0;
        while (!(((($n * ($n + 1)) / 2) < $num) AND ( $num < ((($n - 1) * $n) / 2)))) {
            $formula = (($n * ($n + 1)) / 2);
            if ($formula < $num) { //if its too small
                if ((($n + 1 * ($n + 2)) / 2) > $num) {
                    return false;
                }
                $n_too_small = $n;
                $n           = round(abs(mt_rand($n_too_small, $n_too_big)), 0);
            } elseif ($formula > $num) { //if its too big
                if (((($n - 1) * $n) / 2) < $num) {
                    return false;
                }
                $n_too_big = $n;
                $n         = round(abs(mt_rand($n_too_small, $n_too_big)), 0);
            } else { // its a triangle number!!!
                return $n;
            }
        }
        return false;
    }

    private function is_perfect($n, $array_perfects)
    {
        //if the number is found in the fermat array then this function returns which term it is
        //e.g. 496 is the 3rd term
        $last_digit = substr($n, -1);
        //check to make sure that the number ends in 6 or 8 because all perfect numbers end in 6 or 8

        switch ($last_digit) {
            case '6':
            case '8':
                $pos = array_search($n, $array_perfects);
                return $pos !== false ? $pos + 1 : false;
            break;
            default:
                return false;
            break;
        }       
    }

    private function is_prime($n, $database)
    {
        //this function return true or false if a number is prime or not
        if ($n == 2 OR $n == 3) {
            return true;
        }

        if (bcmod($n, 2) == 0) {
            return false;
        }
        if (bcmod($n, 3) == 0) {
            return false;
        }

        //check the serious way
        $sqrt = ceil(bcsqrt($n)) + 1;
        $j    = 2;
        for ($i = 5; $i < $sqrt; $i += $j, $j = 6 - $j) {
            if (bcmod($n, $i) == 0) {
                return false;
            }
        }
        //else it must be prime
        //add to database as a cache
        $this->app['dbs']['mysql_write']->insert('numberCache', array(
                    'number' => $n,
                    'is_prime' => 1
        ));
        return true;
    }

    private function is_palindrome($number)
    {
        $len = strlen($number);
        if (is_int($len / 2) == true) {
            $i = 1;
            while ($i <= $len / 2) {
                if (substr($number, ($i - 1), 1) != substr($number, -$i, 1)) {
                    return false;
                }
                $i++;
            }
        } else {
            $i = 1;
            while ($i <= ($len / 2)) {
                if (substr($number, ($i - 1), 1) != substr($number, -$i, 1)) {
                    return false;
                }
                $i++;
            }
        }
        return true;
    }

    private function factors($n)
    {
        //check cache
        $sql = 'SELECT factors FROM numberCache WHERE number = ? LIMIT 1';
        $factors = $this->app['dbs']['mysql_read']->fetchAssoc($sql, array($n));
        if ($factors != false) {
            $factors = str_replace(',', '<br />', $factors['factors']);
            return $factors;
        }

        //heavy calculation due to cache miss
        $afactors = null;
        exec('/srv/api.bigprimes.net/public/bin/factors '.(int) $n, $afactors);

        //update cache
        $insertString = implode($afactors, ',');
        if ($cacheCheck == 1) {
            $sql = "UPDATE numberCache SET factors = ?  WHERE number = ?";
            $this->app['dbs']['mysql_write']->executeUpdate($sql, array($insertString, $n));
        } else {
            $this->app['dbs']['mysql_write']->insert('numberCache', array(
                    'number' => $n,
                    'factors' => $insertString
            ));
        }

        return implode($afactors, '<br />');
    }
    
    private $ones = [
 '',
 ' one',
 ' two',
 ' three',
 ' four',
 ' five',
 ' six',
 ' seven',
 ' eight',
 ' nine',
 ' ten',
 ' eleven',
 ' twelve',
 ' thirteen',
 ' fourteen',
 ' fifteen',
 ' sixteen',
 ' seventeen',
 ' eighteen',
 ' nineteen'
];

private $tens = [
 '',
 '',
 ' twenty',
 ' thirty',
 ' forty',
 ' fifty',
 ' sixty',
 ' seventy',
 ' eighty',
 ' ninety'
];

private $triplets = [
 '',
 ' thousand',
 ' million',
 ' billion',
 ' trillion',
 ' quadrillion',
 ' quintillion',
 ' sextillion',
 ' septillion',
 ' octillion',
 ' nonillion'
];


    private $numeralsRoman    = [
            ['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX',
            'X'], //units
        ['X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC',
            'C'], //tens
        ['C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM',
            'M'], //hundreds
        ['M', 'MM', 'MMM', "M<span class='u'>V</span>", "<span class='u'>V</span>",
            "<span class='u'>V</span>M", "<span class='u'>V</span>MM", "<span class='u'>V</span>MMM",
            "M<span class='u'>X</span>", "<span class='u'>X</span>"], //THOUSANDS
        ["<span class='u'>X</span>", "<span class='u'>X</span><span class='u'>X</span>",
            "<span class='u'>X</span><span class='u'>X</span><span class='u'>X</span>",
            "<span class='u'>X</span><span class='u'>L</span>", "<span class='u'>L</span>",
            "<span class='u'>L</span><span class='u'>X</span>", "<span class='u'>L</span><span class='u'>X</span><span class='u'>X</span>",
            "<span class='u'>L</span><span class='u'>X</span><span class='u'>X</span><span class='u'>X</span>",
            "<span class='u'>X</span><span class='u'>C</span>", "<span class='u'>C</span>"], //TEN THOUSANDS
        ["<span class='u'>C</span>", "<span class='u'>C</span><span class='u'>C</span>",
            "<span class='u'>C</span><span class='u'>C</span><span class='u'>C</span>",
            "<span class='u'>C</span><span class='u'>D</span>", "<span class='u'>D</span>",
            "<span class='u'>D</span><span class='u'>C</span>", "<span class='u'>D</span><span class='u'>C</span><span class='u'>C</span>",
            "<span class='u'>D</span><span class='u'>C</span><span class='u'>D</span><span class='u'>C</span>",
            "<span class='u'>C</span><span class='u'>M</span>", "<span class='u'>M</span>"] //HUNDRED THOUSANDS
    ];
    private $numeralsEgyptian = [
            ['&#x133fa;', '&#x133fb;', '&#x133fc;', '&#x133fd;', '&#x133fe;',
            '&#x133ff;', '&#x13400;', '&#x13401;', '&#x13402;'],
            ['&#x13386;', '&#x13387;', '&#x13388;', '&#x13389;', '&#x1338a;',
            '&#x1338b;', '&#x1338c;', '&#x1338d;', '&#x1338e;'],
            ['&#x13362;', '&#x13363;', '&#x13364;', '&#x13365;', '&#x13366;',
            '&#x13367;', '&#x13368;', '&#x13369;', '&#x1336a;'],
            ['&#x131bc;', '&#x131bd;', '&#x131be;', '&#x131bf;', '&#x131c0;',
            '&#x131c1;', '&#x131c2;', '&#x131c3;', '&#x131c4;'],
            ['&#x130ad;', '&#x130ae;', '&#x130af;', '&#x130b0;', '&#x130b1;',
            '&#x130b2;', '&#x130b3;', '&#x130b4;', '&#x130b5;'],
            ['&#x13190;', '&#x13190;&#x13190;', '&#x13190;&#x13190;&#x13190;',
            '&#x13190;&#x13190;&#x13190;&#x13190;', '&#x13190;&#x13190;&#x13190;&#x13190;&#x13190;',
            '&#x13190;&#x13190;&#x13190;&#x13190;&#x13190;&#x13190;', '&#x13190;&#x13190;&#x13190;&#x13190;&#x13190;&#x13190;&#x13190;',
            '&#x13190;&#x13190;&#x13190;&#x13190;&#x13190;&#x13190;&#x13190;&#x13190;',
            '&#x13190;&#x13190;&#x13190;&#x13190;&#x13190;&#x13190;&#x13190;&#x13190;&#x13190;'],
        ['&#x13068;', '&#x13068;&#x13068;', '&#x13068;&#x13068;&#x13068;',
            '&#x13068;&#x13068;&#x13068;&#x13068;', '&#x13068;&#x13068;&#x13068;&#x13068;&#x13068;',
            '&#x13068;&#x13068;&#x13068;&#x13068;&#x13068;&#x13068;', '&#x13068;&#x13068;&#x13068;&#x13068;&#x13068;&#x13068;&#x13068;',
            '&#x13068;&#x13068;&#x13068;&#x13068;&#x13068;&#x13068;&#x13068;&#x13068;',
            '&#x13068;&#x13068;&#x13068;&#x13068;&#x13068;&#x13068;&#x13068;&#x13068;&#x13068;&#x13068;']
    ];
    private $numeralsChinese  = [
            ["&#22777;", "&#36019;", "&#21444;", "&#32902;", "&#20237;",
            "&#38520;", "&#26578;", "&#25420;", "&#29590;"], //units
        ["&#22777;&#25342;", "&#36019;&#25342;", "&#21444;&#25342;",
            "&#32902;&#25342;", "&#20237;&#25342;", "&#38520;&#25342;", "&#26578;&#25342;",
            "&#25420;&#25342;", "&#29590;&#25342;"], //tens
        ["&#22777;&#20336;", "&#36019;&#20336;", "&#21444;&#20336;",
            "&#32902;&#20336;", "&#20237;&#20336;", "&#38520;&#20336;", "&#26578;&#20336;",
            "&#25420;&#20336;", "&#29590;&#20336;"], //hundreds
        ["&#22777;&#20191;", "&#36019;&#20191;", "&#21444;&#20191;",
            "&#32902;&#20191;", "&#20237;&#20191;", "&#38520;&#20191;", "&#26578;&#20191;",
            "&#25420;&#20191;", "&#29590;&#20191;"], //thousands
        ["&#22777;&#33836;", "&#36019;&#33836;", "&#21444;&#33836;",
            "&#32902;&#33836;", "&#20237;&#33836;", "&#38520;&#33836;", "&#26578;&#33836;",
            "&#25420;&#33836;", "&#29590;&#33836;"], //tenthousands
        ["&#22777;&#25342;&#33836;", "&#36019;&#25342;&#33836;", "&#21444;&#25342;&#33836;",
            "&#32902;&#25342;&#33836;", "&#20237;&#25342;&#33836;", "&#38520;&#25342;&#33836;",
            "&#26578;&#25342;&#33836;", "&#25420;&#25342;&#33836;", "&#29590;&#25342;&#33836;"] //hundred thousands
    ];

    private function den2numerals($n, $glyphs)
    {
        //this function converts a number in the form of a string
        //to egyptian/babylonian/chinese numerals

        $numerals = '';
        $length   = strlen($n);

        for ($i = 0; $i < $length; $i++) {
            $tmp = (substr($n, -($i + 1), 1) - 1);
            if (isset($glyphs[$i][$tmp])) {
                $numerals = $glyphs[$i][$tmp].$numerals;
            }
        }

        return $numerals;
    }

    private function convertNum($num, $ones, $tens, $triplets) {
      if (!bccomp($num,0)){//same as $num==0
          return 'zero';
      }

      return $this->convertTri($num, 0, $ones, $tens, $triplets);
    }

private  function convertTri($num, $tri, $ones, $tens, $triplets) {
  // chunk the number, ...rxyy
  //$r = (int) bcdiv($num,1000);
  $r = bcdiv($num,1000);

  $x = bcmod(bcdiv($num,100),10);
  $y = bcmod($num,100);

  // init the output string
  $str = '';

  // do hundreds
  if ($x > 0)
   $str = $ones[$x] . ' hundred';

  // do ones and tens
  if ($y < 20){
   $str .= $ones[$y];
  }else{
   $str .= $tens[(int) bcdiv($y,10)] . $ones[bcmod($y,10)];
  }
  // add triplet modifier only if there
  // is some output to be modified...
  if ($str != '' && isset($triplets[$tri])){
   $str .= $triplets[$tri];
  }

  // continue recursing?
  if ($r > 0){
   return $this->convertTri($r, bcadd($tri,1), $ones, $tens, $triplets).$str;
  }else{
   return $str;
  }
 }


    public function getContent($n)
    {
        $return = '<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
        <ins class="adsbygoogle"
             style="display:inline-block;width:728px;height:90px"
             data-ad-client="ca-pub-9286138628337172"
             data-ad-slot="8513669215"></ins>
        <script>
        (adsbygoogle = window.adsbygoogle || []).push({});
        </script>';

        $number = $n;
        if (strlen($number) > 0) {

            $return .= "<div align='center'><table class=\"text\" width='75%' border='0' cellspacing='0' cellpadding='3'><tr><td align='left' class='text'><br />";

            //make sure there are no spaces, commas, charcater returns so line feeds in the number
            $number = str_replace([' ', ',', chr(13), chr(10)], '', $number);
            
            $is_number = ctype_digit($number);

            if ($is_number && $number !== '0') {
                $num_len   = strlen($number);
                $is_even   = $this->is_even($number);
              
                $return .= '<b>The number you submitted to be crunched was:</b>'.
                    '<h1>'.strrev(wordwrap(strrev($number), 3, ' ', 1)).' - '.$this->convertNum($number,
                        $this->ones, $this->tens, $this->triplets).'</h1>';

                $return .= "<table class=\"text\" width='100%' border='1' cellspacing='0' cellpadding='2'><tr><td>"; //begin table
                //odd or even?
                if ($is_even) {
                    $return .= 'It is an even number.<br />';
                } else {
                    $return .= 'It is an odd number.<br />';
                }
                //palindrome or not?
                if ($num_len > 1) { //if its got more than 1 digit
                    if ($this->is_palindrome($number)) {
                        $return .= 'It is a palindrome.<br />';
                    } else {
                        $return .= 'It is not a palindrome.<br />';
                    }
                }
                //prime ?
                $primes = new \Bigprimes\Primes($this->app);
                $is_prime = $primes->checkPrime($number);
                if ($is_prime === null) {
                    $return .= 'This number is not in our database (Therfore I\'m unable to check for primality).<br />';
                } elseif ($is_prime !== false) {
                    $return .= 'It is the '.$this->stndrd($is_prime).' prime number.<br />';
                } else {
                    $return .= 'It is not a prime number.<br />';
                }
                //mersenne prime or not?
                if ($num_len <= strlen(end($this->array_mersenne))) {
                    $mersenne = array_search($number, $this->array_mersenne);
                    if ($mersenne !== false) {
                        $return .= 'It is the '.$this->stndrd($mersenne+1)." <a href='http://en.wikipedia.org/wiki/Mersenne_prime' class='link'>mersenne prime</a> number.<br />";
                    } else {
                        $return .= "It is not a <a href='http://en.wikipedia.org/wiki/Mersenne_prime' class='link'>mersenne prime</a> number.<br />";
                    }
                } else {
                    $return .= 'Numbers larger than '.strlen(end($this->array_mersenne))." digits are not checked to see if they are a <a href='http://www.mersenne.org/' class='mlink' >mersenne prime</a>.<br />";
                }
                //fermat number or not?
                if ($num_len <= strlen(end($this->array_fermat))) {
                    $fermat = array_search($number, $this->array_fermat);
                    if ($fermat !== false) {
                        $return .= 'It is the '.$this->stndrd($fermat+1)." <a href='http://en.wikipedia.org/wiki/Fermat_number'>fermat number</a>.<br />";
                    } else {
                        $return .= "It is not a <a class=\"link\" href='http://en.wikipedia.org/wiki/Fermat_number'>fermat number</a>.<br />";
                    }
                } else {
                    $return .= 'Numbers larger than '.strlen(end($this->array_fermat))." digits are not checked to see if they are a fermat number.<br />";
                }
                //perfect number or not?
                if ($num_len <= strlen(end($this->array_perfect))) {
                    $perfect = $this->is_perfect($number, $this->array_perfect);
                    if ($perfect) {
                        $return .= 'It is the '.$this->stndrd($perfect)." <a href='http://en.wikipedia.org/wiki/Perfect_number' class='link'>perfect number</a>.<br />";
                    } else {
                        $return .= "It is not a <a href='http://en.wikipedia.org/wiki/Perfect_number' class='link'>perfect number</a>.<br />";
                    }
                } else {
                    $return .= 'Numbers larger than '.strlen(end($array_perfect))." digits are not checked to see if they are perfect.<br />";
                }

                $return .= '</td></tr></table><br /><br />'; //end table


                $return .= "<table class=\"text\" width='100%' border='1' cellspacing='0' cellpadding='2'><tr><td>"; //begin table
                //triangle number or not?
                if ($num_len <= $this->max_len_triangle) {
                    $triangle_num = $this->is_triangle($number);
                    if ($triangle_num) {
                        $return .= 'It is the '.$this->stndrd($triangle_num).' triangle number.<br />';
                    } else {
                        $return .= 'It is not a triangle number.<br />';
                    }
                } else {
                    $return .= 'Numbers larger than '.$this->max_len_triangle.' digits are not checked to see if they are triangle numbers.<br />';
                }

                //square number or not?
                if ($num_len <= $this->max_len_square) {
                    $sqrt = bcsqrt($number,9);
                    if (substr($sqrt, -10) === '.000000000') {
                        $return .= 'It is the '.$this->stndrd(number_format($sqrt, 0,
                                    '.', '')).' square number.<br />';
                    } else {
                        $return .= 'It is not a square number.<br />';
                    }
                } else {
                    $return .= 'Numbers larger than '.$this->max_len_square.' digits are not checked to see if they are square numbers.<br />';
                }

                //cube number or not?
                if ($num_len <= $this->max_len_cube) {
                    $cbrt = pow($number, (1 / 3));
                    if (!stristr($cbrt, '.')) {
                        $return .= 'It is the '.$this->stndrd(number_format($cbrt, 0,
                                    '.', '')).' cube number.<br />';
                    } else {
                        $return .= 'It is not a cube number.<br />';
                    }
                } else {
                    $return .= 'Numbers larger than '.$this->max_len_cube.' digits are not checked to see if they are cube numbers.<br />';
                }

                $return .= "<br />";
                //factorial number or not?
                if ($num_len <= strlen(end($this->array_factorial))) {
                    $factorial = array_search($number, $this->array_factorial);
                    if ($factorial !== false) {
                        $return .= "It is the ".$this->stndrd($factorial+1)." factorial number (".$factorial."!).<br />";
                    } else {
                        $return .= 'It is not a factorial number.<br />';
                    }
                } else {
                    $return .= 'Numbers larger than '.strlen(end($this->array_factorial))." digits are not checked to see if they are a factorial.<br />";
                }
                $return .= '</td></tr></table><br /><br />'; //end table

                $return .= "<table class=\"text\" width='100%' border='1' cellspacing='0' cellpadding='2'><tr><td>"; //begin table
                if ($is_prime == false) {
                    if ($num_len <= $this->max_len_factorization) {
                        if ($is_prime == false) {
                            $return .= 'It has the following factors:<br /><br />';
                            $return .= $this->factors($number);
                        } else {
                            $return .= 'It it has no factors except itself and 1.';
                        }
                    } else {
                        $return .= 'Numbers larger than '.$this->max_len_factorization.' digits are not factored.';
                    }
                } else {
                    $return .= 'It it has no factors except itself and 1.';
                }
                $return .= '</td></tr></table><br /><br />'; //end table

                $return .= "<table class=\"text\" width='100%' border='1' cellspacing='0' cellpadding='2'><tr><td>"; //begin table
                //converting to different bases
                if ($num_len <= $this->max_len_convertion) {
                    $return .= "<table class=\"text\" width='100%' border='0' cellspacing='0' cellpadding='2'>";
                    $return .= "<tr><td width='200'>Base 2 (Binary):</td><td>".strrev(wordwrap(strrev($this->dec2base($number,
                                        2)), 4, " ", 1))."</td></tr>";
                    $return .= "<tr><td>Base 3 (Ternary):</td><td>".strrev(wordwrap(strrev($this->dec2base($number,
                                        3)), 6, " ", 1))."</td></tr>";
                    $return .= "<tr><td>Base 4 (Quaternary):</td><td>".strrev(wordwrap(strrev($this->dec2base($number,
                                        4)), 4, " ", 1))."</td></tr>";
                    $return .= "<tr><td>Base 5 (Quintal):</td><td>".strrev(wordwrap(strrev($this->dec2base($number,
                                        5)), 5, " ", 1))."</td></tr>";
                    $return .= "<tr><td>Base 8 (Octal):</td><td>".strrev(wordwrap(strrev($this->dec2base($number,
                                        8)), 8, " ", 1))."</td></tr>";
                    $return .= "<tr><td>Base 10 (Denary):</td><td>".strrev(wordwrap(strrev($number),
                                3, " ", 1))."</td></tr>";
                    $return .= "<tr><td>Base 16 (Hexadecimal):</td><td>".strrev(wordwrap(strrev($this->dec2base($number,
                                        16)), 4, " ", 1))."</td></tr>";
                    $return .= '</table>';
                } else {
                    $return .= 'Numbers larger than '.$this->max_len_convertion.' digits in length are not converted to different bases.';
                }
                $return .= '</td></tr></table><br /><br />'; //end table
                //roman, egyptian, chinese and babylonian numerals
                if ($num_len <= $this->max_len_babylonian_numerals) {
                    $return .= "<table class=\"text\" width='100%' border='1' cellspacing='0' cellpadding='2'>"; //begin table
                    if ($num_len <= $this->max_len_roman_numerals) {
                        $return .= "<tr><td width='200'>Roman Numerals:</td><td>".$this->den2numerals($number,
                                $this->numeralsRoman)."</td></tr>";
                    }
                    if ($num_len <= $this->max_len_egypt_numerals) {
                        $return .= "<tr><td width='200'>Egyptian Numerals:</td><td style='font-size:40px;'>".$this->den2numerals($number,
                                $this->numeralsEgyptian)."</td></tr>";
                    }
                    if ($num_len <= $this->max_len_chinese_numerals) {
                        $return .= "<tr><td width='200'>Chinese Numerals:</td><td valign='middle' bgcolor='#FFFFFF'>".$this->den2numerals($number,
                                $this->numeralsChinese)."</td></tr>";
                    }
                    $return .= "<tr><td>Babylonian Numerals:</td><td valign='middle' bgcolor='#FFFFFF'>".$this->dec2bab($number)."</td></tr>";
                    $return .= '</table><br /><br />'; //end table
                }
            } else {
                $return .= '<b>\''.$number.'\' is not a positive integer.<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />';
            }
            $return .= '</td></tr></table></div>';
        } else {
            $return .= '<div align="center"><table width="75%" border="0" cellspacing="0" cellpadding="3"><tr><td align="left" class="text">
    <h1>Number Cruncher</h1>
	Welcome to the number cruncher.
	Type in a number in the box below and we will crunch it for you.<br /><br />
	You will be taken to a page that tells you the following information about your number:
    <ul>
	<li>Is it odd or even?</li>
	<li>Is it a palindrome?</li>
	<li>Is it a prime number? (Checks numbers upto '.$this->max_len_prime.' digits in length)</li>
	<li>Is it a <a class="link mlink" href="http://en.wikipedia.org/wiki/Mersenne_prime">mersenne prime</a>? (Checks numbers upto '.strlen(end($this->array_mersenne))." digits in length)</li>
	<li>Is it a <a class=\"link mlink\" href='http://www.fermatsearch.org/'>fermat prime</a>? (Checks numbers upto ".strlen(end($this->array_fermat))." digits in length)</li>
	<li>Is it a <a class=\"link mlink\" href='http://en.wikipedia.org/wiki/Perfect_number'>perfect number</a>? (Checks numbers upto ".strlen(end($this->array_perfect))." digits in length)</li>
	<li>Is it a triangle number? (Checks numbers upto ".$this->max_len_triangle." digits in length)</li>
	<li>Is it a square number? (Checks numbers upto ".$this->max_len_square." digits in length)</li>
	<li>Is it a cube number? (Checks numbers upto ".$this->max_len_cube." digits in length)</li>
	<li>Is it a factorial number? (Checks numbers upto ".strlen(end($this->array_factorial))." digits in length)<br /><br /></li>
	<li>All factors of the number will be listed (for numbers upto ".$this->max_len_factorization." digits)</li>
	<li>The page will also show a list of base conversions. e.g. binary, octal and hexadecimal (Numbers upto ".$this->max_len_convertion." digits in length)</li>
	<li>The number will be converted to roman numerals (Upto ".$this->max_len_roman_numerals." digits in length)</li>
	<li>The number will be converted to egyptian numerals (Upto ".$this->max_len_egypt_numerals." digits in length)</li>
	<li>The number will be converted to chinese numerals (Upto ".$this->max_len_chinese_numerals." digits in length)</li>
	<li>The number will be converted to babylonian numerals (Upto ".$this->max_len_babylonian_numerals." digits in length)</li>
    </ul>
	
	<br /><br />
	
	Please type your number here:
	<form name=\"crunchy\" action='/cruncher/' method='get' target='_top'>
	<table width='200' border='0' cellspacing='0' cellpadding='2'>
	  <tr>
		<td><textarea name='number' cols='85' rows='10' onkeydown=\"if (event.keyCode == 13){document.location='/cruncher/'+crunchy.number.value+'/'}\"></textarea></td>
	  </tr>
	  <tr>
		<td align='center'><input type='button' value='Crunch' onclick=\"document.location='/cruncher/'+crunchy.number.value+'/'\" /></td>
	  </tr>
	</table>
	</form>
	</td></tr></table></div>";
        }

        return $return;
    }
}
